name: Build container image

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - 'v*.*.*'
  pull_request:
    branches: 
      - 'master'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# permissions are needed if pushing to ghcr.io
permissions: 
  contents: read
  packages: write
  checks: write
  pull-requests: write

jobs:
  all-tests:
    strategy:
      matrix: 
        platform:
          - ubuntu-latest
          # Disabled macos and windows.  Browsers should be identical, and we only build docker images for linux.
          # - macos-latest
          # - windows-latest
        node-version: [24.x]

    runs-on: ${{ matrix.platform }}

    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/checkout@v3

      # deps
      - run: npm ci

      # unit tests
      - run: npm run test:unit

      - name: Publish Unit Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          check_name: Unit test report (${{ matrix.platform }}, ${{ matrix.node-version }})
          report_paths: 'test-results/TEST-**.xml'
          annotate_notice: true
          include_success: true


      # e2e tests
      - name: Install playwright browsers
        run: npx playwright install --with-deps
      - run: npm run build
      - run: npm run test:e2e

      - name: Publish E2E Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          check_name: E2E test report (${{ matrix.platform }}, ${{ matrix.node-version }})
          report_paths: playwright-report/TEST-**.xml
          annotate_notice: true
  build-image:
    needs: all-tests
    runs-on: ubuntu-latest
    steps:
    # Get the repository's code
    - name: Checkout
      uses: actions/checkout@v4

    - name: Compute short SHA
      id: sha
      run: echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_OUTPUT

    - name: Install qemu dependency
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static

    - name: Build
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ steps.sha.outputs.SHORT_SHA }}
        containerfiles: |
          ./Containerfile
        platforms: linux/amd64,linux/arm64
        context: .

    - name: Push to GHCR
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      if: github.event_name != 'pull_request'
      with:
        tags: ${{ steps.build-image.outputs.tags }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
